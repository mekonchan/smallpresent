1 ROUNDS

KeyScheduling

K0_19 = Km19
K0_18 = Km18
K0_17 = Km17
K0_16 = Km16
K0_15 = Km15
K0_14 = Km14
K0_13 = Km13
K0_12 = Km12
K0_11 = Km11
K0_10 = Km10
K0_9  = Km9
K0_8  = Km8
K0_7  = Km7
K0_6  = Km6
K0_5  = Km5
K0_4  = Km4
K0_3  = Km3
K0_2  = Km2
K0_1  = Km1
K0_0  = Km0

Rotate

G19 = K0_6
G18 = K0_5
G17 = K0_4
G16 = K0_3
G15 = K0_2
G14 = K0_1
G13 = K0_0
G12 = K0_19
G11 = K0_18
G10 = K0_17
G9  = K0_16
G8  = K0_15
G7  = K0_14
G6  = K0_13
G5  = K0_12
G4  = K0_11
G3  = K0_10
G2  = K0_9
G1  = K0_8
G0  = K0_7

Sbox and Add Counter

B19 = G16*G17*G18 + G16*G17*G19 + G16*G18*G19 + G16 + G17*G18 + G17 + G19 + 1
B18 = G16*G17*G19 + G16*G17 + G16*G18*G19 + G16*G19 + G17*G19 + G18 + G19 + 1
B17 = G16*G17*G18 + G16*G17*G19 + G16*G18*G19 + G17*G19 + G17 + G18*G19 + G19
B16 = G16 + G17*G18 + G18 + G19
B15 = G15
B14 = G14
B13 = G13
B12 = G12
B11 = G11
B10 = G10
B9 = G9
B8 = G8
B7 = G7
B6 = G6
B5 = G5
B4 = G4
B3 = G3 XOR 1
B2 = G2
B1 = G1
B0 = G0

K1

K1_19 = B19
K1_18 = B18
K1_17 = B17
K1_16 = B16
K1_15 = B15
K1_14 = B14
K1_13 = B13
K1_12 = B12
K1_11 = B11
K1_10 = B10
K1_9  = B9
K1_8  = B8
K1_7  = B7
K1_6  = B6
K1_5  = B5
K1_4  = B4
K1_3  = B3
K1_2  = B2
K1_1  = B1
K1_0  = B0

Substitute B into G

K1_19 = G16*G17*G18 + G16*G17*G19 + G16*G18*G19 + G16 + G17*G18 + G17 + G19 + 1
K1_18 = G16*G17*G19 + G16*G17 + G16*G18*G19 + G16*G19 + G17*G19 + G18 + G19 + 1
K1_17 = G16*G17*G18 + G16*G17*G19 + G16*G18*G19 + G17*G19 + G17 + G18*G19 + G19
K1_16 = G16 + G17*G18 + G18 + G19
K1_15 = G15
K1_14 = G14
K1_13 = G13
K1_12 = G12
K1_11 = G11
K1_10 = G10
K1_9 = G9
K1_8 = G8
K1_7 = G7
K1_6 = G6
K1_5 = G5
K1_4 = G4
K1_3 = G3 XOR 1
K1_2 = G2
K1_1 = G1
K1_0 = G0

Substitute G into Km

K1_19 = Km3*Km4*Km5 + Km3*Km4*Km6 + Km3*Km5*Km6 + Km3 + Km4*Km5 + Km4 + Km6 + 1
K1_18 = Km3*Km4*Km6 + Km3*Km4 + Km3*Km5*Km6 + Km3*Km6 + Km4*Km6 + Km5 + Km6 + 1
K1_17 = Km3*Km4*Km5 + Km3*Km4*Km6 + Km3*Km5*Km6 + Km4*Km6 + Km4 + Km5*Km6 + Km6
K1_16 = Km3 + Km4*Km5 + Km5 + Km6
K1_15 = Km2
K1_14 = Km1
K1_13 = Km0
K1_12 = Km19
K1_11 = Km18
K1_10 = Km17
K1_9 = Km16
K1_8 = Km15
K1_7 = Km14
K1_6 = Km13
K1_5 = Km12
K1_4 = Km11
K1_3 = Km10 XOR 1
K1_2 = Km9
K1_1 = Km8
K1_0 = Km7 


----------------------------------------------------------------------------------------------------------------

XOR plaintext with first key, K0_
Wi = Ui XOR K0_j  , where i = 15,14,..,0    j = 19,18,..,4
W15 = U15 XOR K0_19
W14 = U14 XOR K0_18
W13 = U13 XOR K0_17
W12 = U12 XOR K0_16
W11 = U11 XOR K0_15
W10 = U10 XOR K0_14
W9 = U9 XOR K0_13
W8 = U8 XOR K0_12
W7 = U7 XOR K0_11
W6 = U6 XOR K0_10
W5 = U5 XOR K0_9
W4 = U4 XOR K0_8
W3 = U3 XOR K0_7
W2 = U2 XOR K0_6
W1 = U1 XOR K0_5
W0 = U0 XOR K0_4


Sbox

X15 = W12*W13*W14 + W12*W13*W15 + W12*W14*W15 + W12 + W13*W14 + W13 + W15 + 1
X14 = W12*W13*W15 + W12*W13 + W12*W14*W15 + W12*W15 + W13*W15 + W14 + W15 + 1
X13 = W12*W13*W14 + W12*W13*W15 + W12*W14*W15 + W13*W15 + W13 + W14*W15 + W15
X12 = W12 + W13*W14 + W14 + W15

X11 = W8*W9*W10 + W8*W9*W11 + W8*W10*W11 + W8 + W9*W10 + W9 + W11 + 1
X10 = W8*W9*W11 + W8*W9 + W8*W10*W11 + W8*W11 + W9*W11 + W10 + W11 + 1
X9  = W8*W9*W10 + W8*W9*W11 + W8*W10*W11 + W9*W11 + W9 + W10*W11 + W11
X8  = W8 + W9*W10 + W10 + W11

X7  = W4*W5*W6 + W4*W5*W7 + W4*W6*W7 + W4 + W5*W6 + W5 + W7 + 1
X6  = W4*W5*W7 + W4*W5 + W4*W6*W7 + W4*W7 + W5*W7 + W6 + W7	 + 1
X5  = W4*W5*W6 + W4*W5*W7 + W4*W6*W7 + W5*W7 + W5 + W6*W7 + W7
X4  = W4 + W5*W6 + W6 + W7

X3  = W0*W1*W2 + W0*W1*W3 + W0*W2*W3 + W0 + W1*W2 + W1 + W3 + 1
X2  = W0*W1*W3 + W0*W1 + W0*W2*W3 + W0*W3 + W1*W3 + W2 + W3 + 1
X1  = W0*W1*W2 + W0*W1*W3 + W0*W2*W3 + W1*W3 + W1 + W2*W3 + W3
X0  = W0 + W1*W2 + W2 + W3


Player

Z15 = X15
Z14 = X11
Z13 = X7
Z12 = X3
Z11 = X14
Z10 = X10
Z9  = X6
Z8  = X2
Z7  = X13
Z6  = X9
Z5  = X5
Z4  = X1
Z3  = X12
Z2  = X8
Z1  = X4
Z0  = X0

XOR result of p-layer with second key, K1_

Ci = Zi XOR K1_j  , where i = 15,14,..,0.    j = 19,18,..,4.

substitute Zi to {W....}

C15 = (W12*W13*W14 + W12*W13*W15 + W12*W14*W15 + W12 + W13*W14 + W13 + W15 + 1) XOR K1_19
C14 = (W8*W9*W10 + W8*W9*W11 + W8*W10*W11 + W8 + W9*W10 + W9 + W11 + 1) XOR K1_18
C13 = (W4*W5*W6 + W4*W5*W7 + W4*W6*W7 + W4 + W5*W6 + W5 + W7 + 1) XOR K1_17
C12 = (W0*W1*W2 + W0*W1*W3 + W0*W2*W3 + W0 + W1*W2 + W1 + W3 + 1) XOR K1_16
C11 = (W12*W13*W15 + W12*W13 + W12*W14*W15 + W12*W15 + W13*W15 + W14 + W15 + 1) XOR K1_15
C10 = (W8*W9*W11 + W8*W9 + W8*W10*W11 + W8*W11 + W9*W11 + W10 + W11 + 1) XOR K1_14
C9  = (W4*W5*W7 + W4*W5 + W4*W6*W7 + W4*W7 + W5*W7 + W6 + W7 + 1) XOR K1_13
C8  = (W0*W1*W3 + W0*W1 + W0*W2*W3 + W0*W3 + W1*W3 + W2 + W3 + 1) XOR K1_12
C7  = (W12*W13*W14 + W12*W13*W15 + W12*W14*W15 + W13*W15 + W13 + W14*W15 + W15) XOR K1_11
C6  = (W8*W9*W10 + W8*W9*W11 + W8*W10*W11 + W9*W11 + W9 + W10*W11 + W11) XOR K1_10
C5  = (W4*W5*W6 + W4*W5*W7 + W4*W6*W7 + W5*W7 + W5 + W6*W7 + W7) XOR K1_9
C4  = (W0*W1*W2 + W0*W1*W3 + W0*W2*W3 + W1*W3 + W1 + W2*W3 + W3) XOR K1_8
C3  = (W12 + W13*W14 + W14 + W15) XOR K1_7
C2  = (W8 + W9*W10 + W10 + W11) XOR K1_6
C1  = (W4 + W5*W6 + W6 + W7) XOR K1_5
C0  = (W0 + W1*W2 + W2 + W3) XOR K1_4


Substitute W
U = plaintext
C = ciphertext

C15 = ((U12 XOR K0_16)*(U13 XOR K0_17)*(U14 XOR K0_18) + (U12 XOR K0_16)*(U13 XOR K0_17)*(U15 XOR K0_19) + (U12 XOR K0_16)*(U14 XOR K0_18)*(U15 XOR K0_19) + (U12 XOR K0_16) + (U13 XOR K0_17)*(U14 XOR K0_18) + (U13 XOR K0_17) + (U15 XOR K0_19) + 1) XOR K1_19
C14 = ((U8 XOR K0_12)*(U9 XOR K0_13)*(U10 XOR K0_14) + (U8 XOR K0_12)*(U9 XOR K0_13)*(U11 XOR K0_15) + (U8 XOR K0_12)*(U10 XOR K0_14)*(U11 XOR K0_15) + (U8 XOR K0_12) + (U9 XOR K0_13)*(U10 XOR K0_14) + (U9 XOR K0_13) + (U11 XOR K0_15) + 1) XOR K1_18
C13 = ((U4 XOR K0_8)*(U5 XOR K0_9)*(U6 XOR K0_10) + (U4 XOR K0_8)*(U5 XOR K0_9)*(U7 XOR K0_11) + (U4 XOR K0_8)*(U6 XOR K0_10)*(U7 XOR K0_11) + (U4 XOR K0_8) + (U5 XOR K0_9)*(U6 XOR K0_10) + (U5 XOR K0_9) + (U7 XOR K0_11) + 1) XOR K1_17
C12 = ((U0 XOR K0_4)*(U1 XOR K0_5)*(U2 XOR K0_6) + (U0 XOR K0_4)*(U1 XOR K0_5)*(U3 XOR K0_7) + (U0 XOR K0_4)*(U2 XOR K0_6)*(U3 XOR K0_7) + (U0 XOR K0_4) + (U1 XOR K0_5)*(U2 XOR K0_6) + (U1 XOR K0_5) + (U3 XOR K0_7) + 1) XOR K1_16
C11 = ((U12 XOR K0_16)*(U13 XOR K0_17)*(U15 XOR K0_19) + (U12 XOR K0_16)*(U13 XOR K0_17) + (U12 XOR K0_16)*(U14 XOR K0_18)*(U15 XOR K0_19) + (U12 XOR K0_16)*(U15 XOR K0_19) + (U13 XOR K0_17)*(U15 XOR K0_19) + (U14 XOR K0_18) + (U15 XOR K0_19) + 1) XOR K1_15
C10 = ((U8 XOR K0_12)*(U9 XOR K0_13)*(U11 XOR K0_15) + (U8 XOR K0_12)*(U9 XOR K0_13) + (U8 XOR K0_12)*(U10 XOR K0_14)*(U11 XOR K0_15) + (U8 XOR K0_12)*(U11 XOR K0_15) + (U9 XOR K0_13)*(U11 XOR K0_15) + (U10 XOR K0_14) + (U11 XOR K0_15) + 1) XOR K1_14
C9  = ((U4 XOR K0_8)*(U5 XOR K0_9)*(U7 XOR K0_11) + (U4 XOR K0_8)*(U5 XOR K0_9) + (U4 XOR K0_8)*(U6 XOR K0_10)*(U7 XOR K0_11) + (U4 XOR K0_8)*(U7 XOR K0_11) + (U5 XOR K0_9)*(U7 XOR K0_11) + (U6 XOR K0_10) + (U7 XOR K0_11) + 1) XOR K1_13
C8  = ((U0 XOR K0_4)*(U1 XOR K0_5)*(U3 XOR K0_7) + (U0 XOR K0_4)*(U1 XOR K0_5) + (U0 XOR K0_4)*(U2 XOR K0_6)*(U3 XOR K0_7) + (U0 XOR K0_4)*(U3 XOR K0_7) + (U1 XOR K0_5)*(U3 XOR K0_7) + (U2 XOR K0_6) + (U3 XOR K0_7) + 1) XOR K1_12
C7  = ((U12 XOR K0_16)*(U13 XOR K0_17)*(U14 XOR K0_18) + (U12 XOR K0_16)*(U13 XOR K0_17)*(U15 XOR K0_19) + (U12 XOR K0_16)*(U14 XOR K0_18)*(U15 XOR K0_19) + (U13 XOR K0_17)*(U15 XOR K0_19) + (U13 XOR K0_17) + (U14 XOR K0_18)*(U15 XOR K0_19) + (U15 XOR K0_19)) XOR K1_11
C6  = ((U8 XOR K0_12)*(U9 XOR K0_13)*(U10 XOR K0_14) + (U8 XOR K0_12)*(U9 XOR K0_13)*(U11 XOR K0_15) + (U8 XOR K0_12)*(U10 XOR K0_14)*(U11 XOR K0_15) + (U9 XOR K0_13)*(U11 XOR K0_15) + (U9 XOR K0_13) + (U10 XOR K0_14)*(U11 XOR K0_15) + (U11 XOR K0_15)) XOR K1_10
C5  = ((U4 XOR K0_8)*(U5 XOR K0_9)*(U6 XOR K0_10) + (U4 XOR K0_8)*(U5 XOR K0_9)*(U7 XOR K0_11) + (U4 XOR K0_8)*(U6 XOR K0_10)*(U7 XOR K0_11) + (U5 XOR K0_9)*(U7 XOR K0_11) + (U5 XOR K0_9) + (U6 XOR K0_10)*(U7 XOR K0_11) + (U7 XOR K0_11)) XOR K1_9
C4  = ((U0 XOR K0_4)*(U1 XOR K0_5)*(U2 XOR K0_6) + (U0 XOR K0_4)*(U1 XOR K0_5)*(U3 XOR K0_7) + (U0 XOR K0_4)*(U2 XOR K0_6)*(U3 XOR K0_7) + (U1 XOR K0_5)*(U3 XOR K0_7) + (U1 XOR K0_5) + (U2 XOR K0_6)*(U3 XOR K0_7) + (U3 XOR K0_7)) XOR K1_8
C3  = ((U12 XOR K0_16) + (U13 XOR K0_17)*(U14 XOR K0_18) + (U14 XOR K0_18) + (U15 XOR K0_19)) XOR K1_7
C2  = ((U8 XOR K0_12) + (U9 XOR K0_13)*(U10 XOR K0_14) + (U10 XOR K0_14) + (U11 XOR K0_15)) XOR K1_6
C1  = ((U4 XOR K0_8) + (U5 XOR K0_9)*(U6 XOR K0_10) + (U6 XOR K0_10) + (U7 XOR K0_11)) XOR K1_5
C0  = ((U0 XOR K0_4) + (U1 XOR K0_5)*(U2 XOR K0_6) + (U2 XOR K0_6) + (U3 XOR K0_7)) XOR K1_4

Substitute Km into K0_ and K1_

FINAL 
C = ciphertext
U = plaintext
Km = key

C15 = ((U12 XOR Km16)*(U13 XOR Km17)*(U14 XOR Km18) + (U12 XOR Km16)*(U13 XOR Km17)*(U15 XOR Km19) + (U12 XOR Km16)*(U14 XOR Km18)*(U15 XOR Km19) + (U12 XOR Km16) + (U13 XOR Km17)*(U14 XOR Km18) + (U13 XOR Km17) + (U15 XOR Km19) + 1) XOR (Km3*Km4*Km5 + Km3*Km4*Km6 + Km3*Km5*Km6 + Km3 + Km4*Km5 + Km4 + Km6 + 1)
C14 = ((U8 XOR Km12)*(U9 XOR Km13)*(U10 XOR Km14) + (U8 XOR Km12)*(U9 XOR Km13)*(U11 XOR Km15) + (U8 XOR Km12)*(U10 XOR Km14)*(U11 XOR Km15) + (U8 XOR Km12) + (U9 XOR Km13)*(U10 XOR Km14) + (U9 XOR Km13) + (U11 XOR Km15) + 1) XOR (Km3*Km4*Km6 + Km3*Km4 + Km3*Km5*Km6 + Km3*Km6 + Km4*Km6 + Km5 + Km6 + 1)
C13 = ((U4 XOR Km8)*(U5 XOR Km9)*(U6 XOR Km10) + (U4 XOR Km8)*(U5 XOR Km9)*(U7 XOR Km11) + (U4 XOR Km8)*(U6 XOR Km10)*(U7 XOR Km11) + (U4 XOR Km8) + (U5 XOR Km9)*(U6 XOR Km10) + (U5 XOR Km9) + (U7 XOR Km11) + 1) XOR (Km3*Km4*Km5 + Km3*Km4*Km6 + Km3*Km5*Km6 + Km4*Km6 + Km4 + Km5*Km6 + Km6)
C12 = ((U0 XOR Km4)*(U1 XOR Km5)*(U2 XOR Km6) + (U0 XOR Km4)*(U1 XOR Km5)*(U3 XOR Km7) + (U0 XOR Km4)*(U2 XOR Km6)*(U3 XOR Km7) + (U0 XOR Km4) + (U1 XOR Km5)*(U2 XOR Km6) + (U1 XOR Km5) + (U3 XOR Km7) + 1) XOR (Km3 + Km4*Km5 + Km5 + Km6)
C11 = ((U12 XOR Km16)*(U13 XOR Km17)*(U15 XOR Km19) + (U12 XOR Km16)*(U13 XOR Km17) + (U12 XOR Km16)*(U14 XOR Km18)*(U15 XOR Km19) + (U12 XOR Km16)*(U15 XOR Km19) + (U13 XOR Km17)*(U15 XOR Km19) + (U14 XOR Km18) + (U15 XOR Km19) + 1) XOR (Km2)
C10 = ((U8 XOR Km12)*(U9 XOR Km13)*(U11 XOR Km15) + (U8 XOR Km12)*(U9 XOR Km13) + (U8 XOR Km12)*(U10 XOR Km14)*(U11 XOR Km15) + (U8 XOR Km12)*(U11 XOR Km15) + (U9 XOR Km13)*(U11 XOR Km15) + (U10 XOR Km14) + (U11 XOR Km15) + 1) XOR (Km1)
C9  = ((U4 XOR Km8)*(U5 XOR Km9)*(U7 XOR Km11) + (U4 XOR Km8)*(U5 XOR Km9) + (U4 XOR Km8)*(U6 XOR Km10)*(U7 XOR Km11) + (U4 XOR Km8)*(U7 XOR Km11) + (U5 XOR Km9)*(U7 XOR Km11) + (U6 XOR Km10) + (U7 XOR Km11) + 1) XOR (Km0)
C8  = ((U0 XOR Km4)*(U1 XOR Km5)*(U3 XOR Km7) + (U0 XOR Km4)*(U1 XOR Km5) + (U0 XOR Km4)*(U2 XOR Km6)*(U3 XOR Km7) + (U0 XOR Km4)*(U3 XOR Km7) + (U1 XOR Km5)*(U3 XOR Km7) + (U2 XOR Km6) + (U3 XOR Km7) + 1) XOR (Km19)
C7  = ((U12 XOR Km16)*(U13 XOR Km17)*(U14 XOR Km18) + (U12 XOR Km16)*(U13 XOR Km17)*(U15 XOR Km19) + (U12 XOR Km16)*(U14 XOR Km18)*(U15 XOR Km19) + (U13 XOR Km17)*(U15 XOR Km19) + (U13 XOR Km17) + (U14 XOR Km18)*(U15 XOR Km19) + (U15 XOR Km19)) XOR (Km18)
C6  = ((U8 XOR Km12)*(U9 XOR Km13)*(U10 XOR Km14) + (U8 XOR Km12)*(U9 XOR Km13)*(U11 XOR Km15) + (U8 XOR Km12)*(U10 XOR Km14)*(U11 XOR Km15) + (U9 XOR Km13)*(U11 XOR Km15) + (U9 XOR Km13) + (U10 XOR Km14)*(U11 XOR Km15) + (U11 XOR Km15)) XOR (Km17)
C5  = ((U4 XOR Km8)*(U5 XOR Km9)*(U6 XOR Km10) + (U4 XOR Km8)*(U5 XOR Km9)*(U7 XOR Km11) + (U4 XOR Km8)*(U6 XOR Km10)*(U7 XOR Km11) + (U5 XOR Km9)*(U7 XOR Km11) + (U5 XOR Km9) + (U6 XOR Km10)*(U7 XOR Km11) + (U7 XOR Km11)) XOR (Km16)
C4  = ((U0 XOR Km4)*(U1 XOR Km5)*(U2 XOR Km6) + (U0 XOR Km4)*(U1 XOR Km5)*(U3 XOR Km7) + (U0 XOR Km4)*(U2 XOR Km6)*(U3 XOR Km7) + (U1 XOR Km5)*(U3 XOR Km7) + (U1 XOR Km5) + (U2 XOR Km6)*(U3 XOR Km7) + (U3 XOR Km7)) XOR (Km15)
C3  = ((U12 XOR Km16) + (U13 XOR Km17)*(U14 XOR Km18) + (U14 XOR Km18) + (U15 XOR Km19)) XOR (Km14)
C2  = ((U8 XOR Km12) + (U9 XOR Km13)*(U10 XOR Km14) + (U10 XOR Km14) + (U11 XOR Km15)) XOR (Km13)
C1  = ((U4 XOR Km8) + (U5 XOR Km9)*(U6 XOR Km10) + (U6 XOR Km10) + (U7 XOR Km11)) XOR (Km12)
C0  = ((U0 XOR Km4) + (U1 XOR Km5)*(U2 XOR Km6) + (U2 XOR Km6) + (U3 XOR Km7)) XOR (Km11)








